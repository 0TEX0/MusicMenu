---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 0TEX0.
--- DateTime: 11/08/2023 16:54
---
RegisterNetEvent('esx:playerLoaded')
AddEventHandler('esx:playerLoaded', function(xPlayer)
	ESX.PlayerData = xPlayer
end)

RegisterNetEvent('esx:setJob')
AddEventHandler('esx:setJob', function(job)
	ESX.PlayerData.job = job
end)

---@class Music
Music = {}
Music.__index = Music
function Music:new()
	local object = setmetatable({}, Music)
	object.mainMenu = false
	object.pause = false
	object.volume = 5
	object.sliderPanel = {
		index = 1,
		minimum = 0,
	}
	
	return object
end

function Music:KeyboardInput(TextEntry, ExampleText, MaxStringLenght)
	
	AddTextEntry('FMMC_KEY_TIP1', TextEntry)
	DisplayOnscreenKeyboard(1, "FMMC_KEY_TIP1", "", ExampleText, "", "", "", MaxStringLenght)
	blockinput = true
	
	while UpdateOnscreenKeyboard() ~= 1 and UpdateOnscreenKeyboard() ~= 2 do
		Wait(0)
	end
	
	if UpdateOnscreenKeyboard() ~= 2 then
		local result = GetOnscreenKeyboardResult()
		Wait(100)
		blockinput = false
		return result
	else
		Wait(100)
		blockinput = false
		return nil
	end
end

function Music:translate(key)
	if (Lang[Config.lang][key]) then
		return Lang[Config.lang][key]
	end
	return error(("The key %s does not exist in the language %s"):format(key, Config.lang))
end

function Music:soundExists(name)
	if (name == nil) then
		return error('The name is not defined')
	end
	if (XSOUND:getInfo(name)) then
		if (XSOUND:getTimeStamp(name) ~= 0) then
			return true
		end
	end
	return false
end

function Music:getMusicStatus(name)
	if (self:soundExists(name)) then
		if (XSOUND:isPaused(name)) then
			return self:translate("music_paused")
		end
		return self:translate("music_playing")
	end
	return self:translate("no_music_playing")
end

function Music:generateMusicName(name)
	if (name == nil) then
		return error('The name is not defined')
	end
	return "Music_" .. name
end

function Music:formatTime(seconds)
	local minutes <const> = math.floor(seconds / 60)
	local remainingSeconds <const> = (seconds % 60)
	return string.format("%02d:%02d", minutes, remainingSeconds )
end

function Music:playSound(name, url, coords, distance)
	if (self:soundExists(name)) then
		XSOUND:Destroy(name)
	end
	
	XSOUND:PlayUrlPos(name, ("https://www.youtube.com/watch?v=%s"):format(url), 0.5, coords, false)
	XSOUND:Distance(name, distance)
end

function Music:isPlayerInJob(jobs)
	if (ESX.PlayerData.job.name == jobs) then
		return true
	end
	return false
end

function Music:openMenu(key, v)
	if (self.mainMenu) then
		return
	end
	
	self.mainMenu = RageUI.CreateMenu(self:translate("title"), self:translate("subtitle"))
	RageUI.Visible(self.mainMenu, true)
	self.mainMenu.Display.Glare = false
	self.mainMenu.EnableMouse = true
	
	CreateThread(function()
		while self.mainMenu do
			FreezeEntityPosition(PlayerPedId(), true)
			self:drawMenu(self:generateMusicName(key), v)
			
			if (not RageUI.Visible(self.mainMenu)) then
				
				self.mainMenu = false
				FreezeEntityPosition(PlayerPedId(), false)
				return
			end
			Wait(0)
		end
	end)
end

Music = Music:new()